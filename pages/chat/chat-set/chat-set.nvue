<template>

	<view class="page">
		
		<!-- 导航栏 -->
		<free-nav-bar :showRight='false' showBack title="聊天信息">
		</free-nav-bar>
		<scroll-view :show-scrollbar='false'	 scroll-y="true" >
			<!-- 个人  -->
			<free-divider></free-divider>
			<!-- 人 -->
			<view class="pt-2 bg-white flex flex-wrap pl-2 w-100" >
				<!-- 单人 -->
				<view v-if="detail.chat_type==='user'" @click='openUser' class="flex flex-column align-center justify-center my-2"
					style="width: 142rpx;">
					<free-avater :size="110" :src='detail.avatar||"/static/images/userpic.png"'></free-avater>
					<text style="max-width: 110rpx;text-overflow: ellipsis;" class="text-ellipsis font-sm mt-1 text-light-muted">{{detail.name}}</text>
				</view>
				<!-- 群聊 -->
				<view v-else v-for="(item,index) in list" :key="index" @click='openUser(item)'
					class="flex flex-column align-center justify-center my-2" style="width: 142rpx;">
					<free-avater :size="110" :src='item.avatar||"/static/images/userpic.png"'></free-avater>
					<text style="max-width: 100rpx;text-overflow: ellipsis;"
						class="text-ellipsis font-sm mt-1 text-light-muted">{{item.name}}</text>
				</view>
				<!-- + -->
				<view class="flex flex-column align-center justify-start my-2" style="width: 142rpx;">
					<view @click="openMail"  hover-stay-time='50'  hover-start-time='0' hover-class="bg-hover-light" class="rounded flex align-center justify-center"
						style="width: 110rpx;height: 110rpx;border-color:#A9A5A0 ; border-style:dashed ;border-width: 2rpx;">
						<text class="text-light-muted"
							style="font-size: 90rpx ; ">+</text>
			
					</view>
				</view>
			
				<!-- - -->
				<view v-if="detail.chat_type==='group'||user_id===user.id" class="flex flex-column align-center justify-start my-2"
					style="width: 150rpx;order:999">
					<view @click="deleteUser"  hover-stay-time='50'  hover-start-time='0' hover-class="bg-light" class="rounded flex align-center justify-center"
						style="width: 110rpx;height: 110rpx;border-color:#A9A5A0 ; border-style:dashed;border-width: 2rpx;">
						<text class="text-light-muted"
							style="font-size: 90rpx ; ">-</text>
			
					</view>
				</view>
			</view>
			
			<!-- 群 -->
			<view v-if="detail.chat_type==='group'">
				<free-divider></free-divider>
				<free-liat-item @click='updateName' boxStyle='height:110rpx;' :showLeftIcon='false' textClassP='py-3 ml-3'
					title="群聊名称" showRight>
					<text style="max-width: 360rpx;text-overflow: ellipsis;" class="text-ellipsis font text-muted"
						slot='right'>{{detail.name}}</text>
				</free-liat-item>
				<free-liat-item @click='openCode' boxStyle='height:110rpx;' :showLeftIcon='false' textClassP='py-3  ml-3'
					title="群二维码" showRight>
					<view slot='right'>
						<text class="iconfont text-muted font-lg py-15">&#xe6bb;</text>
					</view>
					
				</free-liat-item>
				<free-liat-item @click='openGroupRemark' :boxStyle='detail.remark.trim()!==""?"height:120rpx;":"height:110rpx;"' :showLeftIcon='false'
				:Subtitle='detail.remark.trim()!==""?detail.remark:false'	textClassP='py-3  ml-3' title="群公告" showRight>
					
				</free-liat-item>
			</view>
			
			<!-- 个人 -->
			<free-divider></free-divider>
			<free-liat-item @click='openHiestory' boxStyle='height:110rpx;' :showLeftIcon='false' textClassP='py-3  ml-3'
				title="查找聊天记录" showRight></free-liat-item>
			
			<free-divider></free-divider>
			<free-liat-item bghover="bg-white" boxStyle='height:110rpx;' :showRightIcon='false' :showLeftIcon='false' textClassP='py-3  ml-3'
				title="消息免打扰" showRight>
				<switch @change="updateChatItem($event,'nowarn')" style="transform:scale(0.8)" color="#06BD5D" slot='right'
					:checked="detail.nowarn" />
			</free-liat-item>
			<free-liat-item bghover="bg-white" boxStyle='height:110rpx;' :showRightIcon='false' :showLeftIcon='false' textClassP='py-3  ml-3'
				title="置顶聊天" showRight>
				<switch @change="updateChatItem($event,'istop')" style="transform:scale(0.8)" color="#06BD5D" slot='right'
					:checked="detail.istop" />
			</free-liat-item>
			<free-liat-item bghover="bg-white" boxStyle='height:110rpx;' :showRightIcon='false' :showLeftIcon='false' textClassP='py-3  ml-3'
				title="提醒" showRight>
				<switch @change="updateChatItem($event,'strongwarn')" style="transform:scale(0.8)" color="#06BD5D"
					slot='right' :checked="detail.strongwarn" />
			</free-liat-item>
			
			<!-- 群 -->
			<view v-if="detail.chat_type==='group'">
				<free-divider></free-divider>
				<free-liat-item @click='updateNickname' boxStyle='height:110rpx;' :showLeftIcon='false'
					textClassP='py-3  ml-3' title="我在群里的昵称" showRight>
					<text style="max-width: 360rpx;" class="text-ellipsis font text-muted" slot='right'>{{nickname}}</text>
				</free-liat-item>
				<free-liat-item bghover="bg-white" boxStyle='height:110rpx;' :showRightIcon='false' :showLeftIcon='false'
					textClassP='py-3  ml-3' title="显示群成员昵称" showRight>
					<switch :checked="detail.shownickname" @change="updateChatItem($event,'shownickname')"
						style="transform:scale(0.8)" color="#06BD5D" slot='right' />
				</free-liat-item>
			</view>
			
			<!-- 个人 -->
			<view v-if="detail.chat_type==='user'">
				<free-divider></free-divider>
				<free-liat-item @click="clear" boxStyle='height:110rpx;' :showLeftIcon='false' textClassP='py-3  ml-3' title="清空聊天记录"
					showRight></free-liat-item>
			</view>
			<free-divider></free-divider>
			<free-liat-item @click='openReport' boxStyle='height:110rpx;' :showLeftIcon='false' textClassP='py-3  ml-3'
				title="投诉" showRight>
			</free-liat-item>
			
			<!-- 群 -->
			<view v-if="detail.chat_type==='group'">
				<free-divider></free-divider>
				<view @click="clear"  hover-stay-time='50'  hover-start-time='0' hover-class="bg-hover-light" style="height: 110rpx;border-color: #ededed ;"
					class="border-bottom  bg-white  flex align-center justify-center ">
					<text style="font-weight: 600;" class="font text-danger">清空聊天记录</text>
				</view>
				<view @click="quit"  hover-stay-time='50'  hover-start-time='0' hover-class="bg-light" style="height: 110rpx;"
					class="bg-white  flex align-center justify-center ">
					<text style="font-weight: 600;" class="font text-danger">删除并退出</text>
				</view>
			</view>
			<free-confirm ref='confirm' :title="'修改'+confirmTitle">
				<input type="text" v-model="confirmText" class="border-bottom font-md" :placeholder="confirmTitle">
			</free-confirm>
			
			<view style="height: 80rpx;">
			
			</view>
		</scroll-view>
		


	</view>
</template>

<script>
	import {
		mapState
	} from "vuex"
	import $H from "@/common/free-lib/request.js"
	import auth from "@/common/mixin/auth.js"
	import freeConfirm from "@/components/free-ui/free-confirm.vue"
	import freeDivider from "@/components/free-ui/free-divider.vue"
	import freeNavBar from "@/components/free-ui/free-nav-bar.vue"
	import freeAvater from "@/components/free-ui/free-avater.vue"
	import freeLiatItem from "@/components/free-ui/free-list-item.vue"
	export default {
		mixins: [auth],
		data() {
			return {
				list: [],
				nickname: "", //我在本群昵称
				confirmType: 'name',
				confirmText: '',
				detail: {
					id: 0, // 接收人/群 id
					chat_type: 'user', // 接收类型 user单聊 group群聊
					avatar: '', // 接收人/群 头像
					name: '', // 接收人/群 昵称

					istop: false, // 是否置顶
					shownickname: true, // 是否显示昵称
					nowarn: false, // 消息免打扰
					strongwarn: false, // 是否开启强提醒

					user_id: 0, // 群管理员id
					remark: "", // 群公告
					invite_confirm: 0, // 邀请确认
				},
				user_id:''
			}
		},
		components: {
			freeDivider,
			freeNavBar,
			freeAvater,
			freeLiatItem,
			freeConfirm
		},
		onShow() {
			this.chat.readChatItem(this.detail.id, this.detail.chat_type)
			if (this.detail.chat_type === 'group') {
				$H.get('/group_info/' + this.detail.id).then(res => {
					this.user_id=res.user_id
					this.list = res.group_users.map(item => {
						if (item.user_id === this.user.id) {
							this.nickname = item.nickname || item.user.nickname || item.user.username
						}
						return {
							id: item.user_id,
							name: item.nickname || item.user.nickname || item.user.username,
							avatar: item.user.avatar
						}
					})
					this.detail.remark = res.remark

				}).catch(err => {
					// console.log(err);
					uni.navigateBack({
						delta: 1
					})
				})
			}
		},
		onLoad(e) {
			// console.log(this.detail.shownickname);
			if (!e.params) {
				return this.backToast()
			}
			let detail = JSON.parse(e.params)
			
			// 获取当前会话详细资料
			detail = this.chat.getChatListItem(detail.id, detail.chat_type)
			if (!detail) {
				return this.backToast()
			}
			this.detail = detail
		},
		computed: {
			...mapState({
				chat: state => state.user.chat,
				user: state => state.user.user
			}),
			confirmTitle() {
				return this.confirmType === 'name' ? '群昵称' : '昵称'
			},
		},
		methods: {
			// 跳转投诉页面
			openReport() {
				uni.navigateTo({
					url: '/pages/mail/user-report/user-report?params=' + JSON.stringify({
						user_id: this.detail.id,
						type: this.chat_type
					})
				})
			},
			openUser(item){
				if(this.detail.chat_type==='group'){
					uni.navigateTo({
						url:"/pages/mail/user-base/user-base?user_id="+item.id
					})
				}else{
					uni.navigateTo({
						url:"/pages/mail/user-base/user-base?user_id="+this.detail.id
					})
				}
				
			},
			updateChatItem(e, k) {
				// console.log(this.detail);
				this.detail[k] = e.detail.value

				this.chat.updateChatItem({
					id: this.detail.id,
					chat_type: this.detail.chat_type,
				}, this.detail)
			},
			//修改我在本群昵称
			updateNickname() {
				this.confirmType = 'nickname'
				this.confirmText = this.nickname
				this.$refs.confirm.show((close) => {

					if (this.confirmText === this.nickname) {
						return uni.showToast({
							title: "名称未修改（待优化）",
							icon: 'none'
						})
					}
					$H.post('/group/nickname', {
						id: this.detail.id,
						nickname: this.confirmText
					}).then(res => {
						uni.showToast({
							title: '修改成功',
							icon: 'none'
						})
						this.nickname = this.confirmText
						close()
					})
				})
			},
			// 修改群昵称
			updateName() {
				if(this.user_id!==this.user.id){
					return uni.showToast({
						title:'你不是管理员，没有权限',
						icon:'none'
					})
				}
				this.confirmType = 'name'
				this.confirmText = this.detail.name
				this.$refs.confirm.show((close) => {
					if (this.confirmText == '') {
						return uni.showToast({
							title: "群昵称不能为空",
							icon: 'none'
						})
					}
					if (this.confirmText === this.detail.name) {
						return uni.showToast({
							title: "群名称未修改（待优化）",
							icon: 'none'
						})
					}
					$H.post('/group/rename', {
						id: this.detail.id,
						name: this.confirmText
					}).then(res => {
						uni.showToast({
							title: '修改成功',
							icon: 'none'
						})
						this.detail.name = this.confirmText
						this.chat.readChatItem(this.detail.id, this.detail.chat_type)
						close()
					})
				})
			},
			openMail() {
				let params = this.detail.chat_type === 'user' ? '?type=createGroup&id=' + this.detail.id  : '?type=inviteGroup&id=' + this.detail.id + '&detail=' + JSON.stringify(this.list)
				uni.navigateTo({
					url: '../../mail/mail/mail' + params,
				});
			},
			openGroupRemark() {
				if(this.user_id!==this.user.id){
					return uni.showToast({
						title:'你不是管理员，没有权限',
						icon:'none'
					})
				}
				uni.navigateTo({
					url: '../group-remark/group-remark?params=' + encodeURIComponent(JSON.stringify({
						id: this.detail.id,
						remark: this.detail.remark
					}))
				});
			},
			// 删除并退出
			quit() {
				uni.showModal({
					content: '是否要删除或退出该群聊？',
					success: (res) => {
						if (res.cancel) return
						$H.post('/group/quit', {
							id: this.detail.id
						}).then(res => {
							uni.showToast({
								title: '操作成功',
								icon: 'none'
							})
							uni.switchTab({
								url: '/pages/tabber/index/index'
							})
						})
					}
				})
			},
			openCode() {
				uni.navigateTo({
					url: '../../my/code/code?params=' + encodeURIComponent(JSON.stringify({
						id: this.detail.id,
						name: this.detail.name,
						avatar: this.detail.avatar,
					})) + '&type=group'
				})
			},
			clear() {
				uni.showModal({
					content: '是否要清除聊天记录？',
					success: (res) => {
						if (res.confirm) {
							this.chat.clearChatDetail(this.detail.id, this.detail.chat_type)
							uni.showToast({
								title: '清除成功',
								icon: 'none'
							})
							uni.$emit('updateHistory')
						}
					}
				})
			},
			openHiestory() {
				uni.navigateTo({
					url: `../chat-history/chat-history?chat_type=${this.detail.chat_type}&id=${this.detail.id}`
				})
			},
			deleteUser() {
				uni.navigateTo({
					url: '../group-user/group-user?id=' + this.detail.id
				})
			}
		}
	}
</script>

<style>

</style>
